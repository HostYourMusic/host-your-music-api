openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/hostyourmusic/main/1.0.0
info:
  description: HYM API
  version: "0.0.1"
  title: Host Your Music API
  contact:
    email: rsouza01@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: users
    description: User CRUD related operations
  - name: subscriptions
    description: Subscriptions CRUD related operatoins
paths:
  /users:
    get:
      tags:
        - users
      summary: List users
      operationId: listUsers
      description: |
        By passing in the appropriate options, you can search for
        available users in the system
      parameters:
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: bad input parameter
    post:
      tags:
      - "users"
      summary: "Add a new user to the system"
      description: ""
      operationId: "addUser"
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "405":
          description: "Invalid input"

components:
  schemas:
    Tag:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
      xml:
        name: "Tag"
    User:
      type: "object"
      required:
      - "name"
      - "photoUrls"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          example: "doggie"
        tags:
          type: "array"
          xml:
            name: "tag"
            wrapped: true
          items:
            $ref: "#/components/schemas/Tag"
        status:
          type: "string"
          description: "User status"
          enum:
          - "enabled"
          - "disabled"
    Subscription:
      type: object
      properties:
        id:
          type: integer
          format: int64
      description: "\tSubscription grouping users"
    Schema:
      description: S
